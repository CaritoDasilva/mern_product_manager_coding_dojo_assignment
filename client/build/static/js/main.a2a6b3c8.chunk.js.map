{"version":3,"sources":["components/Product.jsx","components/Form.jsx","components/DeleteButton.jsx","views/Home.jsx","views/Detail.jsx","views/Edit.jsx","App.js","serviceWorker.js","index.js"],"names":["Product","props","title","id","Form","onSubmitHandler","product","setProduct","onSubmit","e","className","htmlFor","type","value","aria-describedby","onChange","target","price","description","DeleteButton","navigate","useNavigate","class","onClick","axios","delete","then","res","console","log","catch","err","Home","useState","setErrors","products","setProducts","useEffect","get","data","preventDefault","post","errorResponse","response","errors","errorArr","Object","keys","key","push","message","map","i","href","_id","to","Detail","Edit","put","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.a2a6b3c8.chunk.js","sourcesContent":["import React from 'react';\n\nconst Product = props => {\n    const { title, id } = props;\n\n    return (\n        <div>\n            {title}\n\n        </div >\n    )\n}\n\nexport default Product;","import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Form = (props) => {\n    const { onSubmitHandler, product, setProduct } = props;\n\n    return (\n        <div>\n            <form onSubmit={(e) => onSubmitHandler(e)}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail1\">Title</label>\n                    <input type=\"text\" className=\"form-control\" value={product.title} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\n                        onChange={(e) => setProduct({ ...product, title: e.target.value })} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail1\">Price</label>\n                    <input type=\"number\" className=\"form-control\" value={product.price} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\n                        onChange={(e) => setProduct({ ...product, price: e.target.value })} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail1\">Description</label>\n                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" value={product.description} aria-describedby=\"emailHelp\"\n                        onChange={(e) => setProduct({ ...product, description: e.target.value })} />\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Form;","import React from 'react';\nimport { useNavigate } from '@reach/router';\nimport axios from 'axios'\n\nconst DeleteButton = props => {\n    const navigate = useNavigate()\n    const { id } = props;\n    const remove = () => {\n        axios.delete(`http://localhost:8000/api/products/delete/${id}`)\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n        navigate('/')\n    }\n    return (\n        <button type=\"button\" class=\"btn btn-danger\" onClick={remove}>Delete</button>\n    )\n}\n\nexport default DeleteButton;","import React, { useState, useEffect } from 'react';\nimport Product from '../components/Product';\nimport Form from '../components/Form';\nimport axios from 'axios';\nimport { Link } from '@reach/router';\nimport DeleteButton from '../components/DeleteButton';\n\n\nconst Home = () => {\n    const [product, setProduct] = useState({\n        title: '',\n        price: 0,\n        description: ''\n    })\n    const [errors, setErrors] = useState([]);\n    const [products, setProducts] = useState([]);\n    const onSubmitHandler = e => {\n        //prevent default behavior of the submit\n        e.preventDefault();\n        //make a post request to create a new person\n        axios.post('http://localhost:8000/api/products/new', {\n            ...product\n        })\n            .then(res => console.log(res))\n            // .catch(err => console.log(err))\n            .catch(err => {\n                const errorResponse = err.response.data.errors; // Get the errors from err.response.data\n                const errorArr = []; // Define a temp error array to push the messages in\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\n                    errorArr.push(errorResponse[key].message)\n                }\n                // Set Errors\n                console.log(errorResponse)\n                setErrors(errorArr);\n            })\n\n    }\n    useEffect(() => {\n        axios.get(\"http://localhost:8000/api/products/\")\n            .then(res => setProducts(res.data.products))\n    }, [products])\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"col-md-6 offset-md-3\">\n                <Form onSubmitHandler={onSubmitHandler} product={product} setProduct={setProduct} />\n            </div>\n            <div className=\"col-md-6 offset-md-3\">\n                All Products\n                {products ? products.map((product, i) => {\n                return (\n                    <>\n                        <a href={`/product/${product._id}`} key={i} >\n                            <Product title={product.title} id={product._id} />\n                        </a>\n                        <Link to={`/product/${product._id}/edit`}>\n                            <button type=\"button\" class=\"btn btn-info\">Edit</button>\n                        </Link>\n                        <DeleteButton id={product._id} />\n                    </>\n                )\n            }) : ''}\n            </div>\n\n        </div>\n    )\n}\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport { Link } from '@reach/router';\nconst Detail = props => {\n    const { id } = props;\n    const [product, setProduct] = useState({\n        title: '',\n        price: 0,\n        description: ''\n    })\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/products/${id}`)\n            .then(res => setProduct(res.data.product))\n            .catch(err => console.log(err))\n    }, [id])\n    console.log(props)\n    return (\n        <div>\n            {\n                product ?\n                    (\n                        <>\n                            <h1>Producto:</h1>\n                            <h3>{product.title}</h3>\n                            <h3>${product.price}</h3>\n                            <h3>{product.description}</h3>\n                        </>\n\n                    ) :\n                    <>\n                        <h1>No Hay productos disponibles</h1>\n                        <Link to=\"/\">Agregar un producto</Link>\n                    </>\n            }\n        </div>\n    )\n}\n\nexport default Detail;","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"@reach/router\"\nimport Form from '../components/Form';\n\nimport axios from 'axios';\nconst Edit = (props) => {\n    const navigate = useNavigate()\n    const { id } = props;\n    const [product, setProduct] = useState({\n        title: '',\n        price: 0,\n        description: ''\n    })\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/products/${id}`)\n            .then(res => setProduct(res.data.product))\n            .catch(err => console.log(err))\n    }, [id])\n    const onSubmitHandler = () => {\n        axios.put(`http://localhost:8000/api/products/update/${id}`, {\n            ...product\n        })\n            .then(res => res => console.log(res))\n            .catch(err => console.log(err))\n\n        navigate('/')\n    }\n\n    return (\n        <div>\n            <Form onSubmitHandler={onSubmitHandler} product={product} setProduct={setProduct} />\n        </div>\n    )\n}\n\nexport default Edit;","import React from 'react';\nimport './App.css';\nimport Home from './views/Home';\nimport { Router } from '@reach/router';\nimport Detail from './views/Detail';\nimport Edit from './views/Edit';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Home path=\"/\" />\n        <Detail path=\"/product/:id\" />\n        <Edit path=\"/product/:id/edit\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}